Simulators here use QsimProcessor as the processor model. This model is built with
the QSim library and gets instructions from QSim. All processors must share one
QSim OS domain. This means this model can only be used in a sequential program.




prog1.cc
========

This program uses QsimProcessor as the processor model. QsimProcessor is built
with the Qsim library. Since all processors should share the same Qsim OS domain,
this program should only be run with 1 LP.


A node is:
- SimpleProcessor with QSim, 1 level cache (simple_cache), or
- SimpleMC

The network is simple-net.

  ------------------------
    SimpleProcessor (QSim)   
          |                       Or SimpleMC
     simple_cache
  ------------------------
          |
          |
      NetworkInterface (simple-net)


The prog1 program in this directory builds a multicore system simulator using the
Manifold framework. It uses SimpleProcessor as the processor model, which is built
with QSim. Therefore, the instructions are generated by QSim.

Another program, prog1_nonet, removes network from the system. It was created for
debugging purposes, but it might be useful to keep it.

Follow the following steps to build the program.

1. Build simple-proc, simple-cache, and simple-net
2. Create the following symbolic links: libqemu.so, linux, qemu-0.12.3
3. Create a symbolic link for libqsim.so in /usr/local/lib
4. make


prog2.cc
========

This programs builds a system with 2 levels of cache and L2 is shared.

  ------------------------
    SimpleProcessor (QSim)   
          |                       Or SimpleMC
       llp_cache
          |
       lls_cache (shared L2)
  ------------------------
          |
          |
      NetworkInterface (simple-net)


